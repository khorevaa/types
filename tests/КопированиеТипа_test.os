#использовать "../src"
#Использовать asserts
#Использовать logos

Перем юТест;
Перем Лог;

Функция ПолучитьСписокТестов(Знач Тестирование) Экспорт

	юТест = Тестирование;

	ИменаТестов = Новый Массив;

	ИменаТестов.Добавить("ТестДолжен_ПроверитьКопированиеПростыеТипы");
	ИменаТестов.Добавить("ТестДолжен_ПроверитьКопированиеСпециальныеТипы");
	
	ИменаТестов.Добавить("ТестДолжен_ПроверитьКопированиеМассивов");
	ИменаТестов.Добавить("ТестДолжен_ПроверитьКопированиеМассиваВПриемник");
	ИменаТестов.Добавить("ТестДолжен_ПроверитьКопированиеМассиваБезВложенныхТипов");
	ИменаТестов.Добавить("ТестДолжен_ПроверитьКопированиеМассиваИВложенныхТипов");
	// ИменаТестов.Добавить("ТестДолжен_ПроверитьТаблицаЗначений");
	// ИменаТестов.Добавить("ТестДолжен_ПроверитьДеревоЗначений");
	// ИменаТестов.Добавить("ТестДолжен_ПроверитьСписокЗначений");

	ИменаТестов.Добавить("ТестДолжен_ПроверитьКопированиеСтруктуры");
	ИменаТестов.Добавить("ТестДолжен_ПроверитьКопированиеСтруктурыВПриемник");
	ИменаТестов.Добавить("ТестДолжен_ПроверитьКопированиеСтруктурыБезВложенныхТипов");
	ИменаТестов.Добавить("ТестДолжен_ПроверитьКопированиеСтруктурыИВложенныхТипов");
	// ИменаТестов.Добавить("ТестДолжен_ПроверитьСоответствия");
	
	Возврат ИменаТестов;

КонецФункции

#Область Реализованные_тесты

Процедура ТестДолжен_ПроверитьКопированиеПростыеТипы() Экспорт

	ЗначениеЧисло = 0;
	ЗначениеСтрока = "Строка";
	ЗначениеБулево = Истина;
	ЗначениеДата = Дата("20190101");
	ЗначениеТип = Тип("Строка");	

	Ожидаем.Что(КопированиеТипа.Скопировать(ЗначениеЧисло), "Проверка копирования типа число должна быть успешной").Равно(ЗначениеЧисло);
	Ожидаем.Что(КопированиеТипа.Скопировать(ЗначениеСтрока), "Проверка копирования типа строка должна быть успешной").Равно(ЗначениеСтрока);
	Ожидаем.Что(КопированиеТипа.Скопировать(ЗначениеБулево), "Проверка копирования типа Булево должна быть успешной").Равно(ЗначениеБулево);
	Ожидаем.Что(КопированиеТипа.Скопировать(ЗначениеДата), "Проверка копирования типа Дата должна быть успешной").Равно(ЗначениеДата);
	Ожидаем.Что(КопированиеТипа.Скопировать(ЗначениеТип), "Проверка копирования типа Тип должна быть успешной").Равно(ЗначениеТип);
	
КонецПроцедуры

Процедура ТестДолжен_ПроверитьКопированиеСпециальныеТипы() Экспорт

	ЗначениеНеопределено = Неопределено;
	ЗначениеUID = Новый УникальныйИдентификатор();
	
	Ожидаем.Что(КопированиеТипа.Скопировать(ЗначениеНеопределено), "Проверка копирования типа <Неопределено> должна быть успешной").Равно(ЗначениеНеопределено);
	Ожидаем.Что(КопированиеТипа.Скопировать(ЗначениеUID), "Проверка копирования типа <UID> должна быть успешной").Равно(ЗначениеUID);

КонецПроцедуры

Процедура ТестДолжен_ПроверитьКопированиеМассивов() Экспорт

	ЗначениеМассив = Новый Массив();
	ЗначениеМассив.Добавить("Элемент1");
	ЗначениеМассив.Добавить("Элемент2");
	ЗначениеФиксированныйМассив = Новый ФиксированныйМассив(ЗначениеМассив);
	
	Ожидаем.Что(КопированиеТипа.Скопировать(ЗначениеМассив), "Проверка копирования типа <Массив> должна быть успешной").Не_().Равно(ЗначениеМассив);
	Ожидаем.Что(КопированиеТипа.Скопировать(ЗначениеМассив).Количество(), "Проверка копирования типа <Массив> должна быть успешной").Равно(ЗначениеМассив.Количество());
	
	Ожидаем.Что(ПроверкаТипа.ЭтоФиксированныйМассив(КопированиеТипа.Скопировать(ЗначениеФиксированныйМассив)), "Проверка копирования типа <ФиксированныйМассив> должна быть успешной").ЕстьИстина();
	Ожидаем.Что(КопированиеТипа.Скопировать(ЗначениеФиксированныйМассив), "Проверка копирования типа <ФиксированныйМассив> должна быть успешной").Не_().Равно(ЗначениеФиксированныйМассив);
	Ожидаем.Что(КопированиеТипа.Скопировать(ЗначениеФиксированныйМассив).Количество(), "Проверка копирования типа <ФиксированныйМассив> должна быть успешной").Равно(ЗначениеФиксированныйМассив.Количество());

КонецПроцедуры

Процедура ТестДолжен_ПроверитьКопированиеМассиваВПриемник() Экспорт
	
	// Копирование без создания копий вложенных ссылочных типов
	ЗначениеМассив = Новый Массив();
	ВложеннаяСтруктура = Новый Структура("Ключ1, Ключ2", "Ключ1", "Ключ2");
	ЗначениеМассив.Добавить(ВложеннаяСтруктура);
	РезультатКопирования = КопированиеТипа.Скопировать(ЗначениеМассив, , 0);
	Ожидаем.Что(РезультатКопирования, "Проверка копирования типа <Массив> должна быть успешной").Не_().Равно(ЗначениеМассив);
	Ожидаем.Что(РезультатКопирования.Количество(), "Проверка копирования типа <Массив> должна быть успешной").Равно(ЗначениеМассив.Количество());
	Ожидаем.Что(РезультатКопирования[0], "Проверка копирования типа <Массив> должна быть успешной").Равно(ВложеннаяСтруктура);

КонецПроцедуры

Процедура ТестДолжен_ПроверитьКопированиеМассиваБезВложенныхТипов() Экспорт
	
	ЗначениеМассив = Новый Массив();
	ЗначениеМассив.Добавить("Элемент1");
	ЗначениеМассив.Добавить("Элемент2");
	
	// Копирование в приемник
	ЗначениеМассивПриемник = Новый Массив();
	РезультатКопирования = КопированиеТипа.Скопировать(ЗначениеМассив, ЗначениеМассивПриемник);
	Ожидаем.Что(РезультатКопирования, "Проверка копирования типа <Массив> должна быть успешной").Равно(ЗначениеМассивПриемник);
	Ожидаем.Что(РезультатКопирования, "Проверка копирования типа <Массив> должна быть успешной").Не_().Равно(ЗначениеМассив);
	Ожидаем.Что(РезультатКопирования.Количество(), "Проверка копирования типа <Массив> должна быть успешной").Равно(ЗначениеМассив.Количество());
	
КонецПроцедуры

Процедура ТестДолжен_ПроверитьКопированиеМассиваИВложенныхТипов() Экспорт
	
	// Копирование с создания копий вложенных ссылочных типов
	ЗначениеМассив = Новый Массив();
	ВложеннаяСтруктура = Новый Структура("Ключ1, Ключ2", "Ключ1", "Ключ2");
	ЗначениеМассив.Добавить(ВложеннаяСтруктура);
	РезультатКопирования = КопированиеТипа.Скопировать(ЗначениеМассив, , 1);
	Ожидаем.Что(РезультатКопирования, "Проверка копирования типа <Массив> должна быть успешной").Не_().Равно(ЗначениеМассив);
	Ожидаем.Что(РезультатКопирования.Количество(), "Проверка копирования типа <Массив> должна быть успешной").Равно(ЗначениеМассив.Количество());
	Ожидаем.Что(РезультатКопирования[0], "Проверка копирования типа <Массив> должна быть успешной").Не_().Равно(ВложеннаяСтруктура);
	Ожидаем.Что(РезультатКопирования[0].Ключ1, "Проверка копирования типа <Массив> должна быть успешной").Равно(ВложеннаяСтруктура.Ключ1);
	Ожидаем.Что(РезультатКопирования[0].Ключ2, "Проверка копирования типа <Массив> должна быть успешной").Равно(ВложеннаяСтруктура.Ключ2);
	
КонецПроцедуры

Процедура ТестДолжен_ПроверитьКопированиеСтруктуры() Экспорт

	ЗначениеСтруктура = Новый Структура("Ключ1, Ключ2", "Ключ1", "Ключ2");
	ЗначениеФиксированнойСтруктуры = Новый ФиксированнаяСтруктура(ЗначениеСтруктура);
	
	Ожидаем.Что(КопированиеТипа.Скопировать(ЗначениеСтруктура), "Проверка копирования типа <Массив> должна быть успешной").Не_().Равно(ЗначениеСтруктура);
	Ожидаем.Что(КопированиеТипа.Скопировать(ЗначениеСтруктура).Количество(), "Проверка копирования типа <Массив> должна быть успешной").Равно(ЗначениеСтруктура.Количество());
	
	Ожидаем.Что(ПроверкаТипа.ЭтоФиксированнаяСтруктура(КопированиеТипа.Скопировать(ЗначениеФиксированнойСтруктуры)), "Проверка копирования типа <ФиксированныйМассив> должна быть успешной").ЕстьИстина();
	Ожидаем.Что(КопированиеТипа.Скопировать(ЗначениеФиксированнойСтруктуры), "Проверка копирования типа <ФиксированныйМассив> должна быть успешной").Не_().Равно(ЗначениеФиксированнойСтруктуры);
	Ожидаем.Что(КопированиеТипа.Скопировать(ЗначениеФиксированнойСтруктуры).Количество(), "Проверка копирования типа <ФиксированныйМассив> должна быть успешной").Равно(ЗначениеФиксированнойСтруктуры.Количество());

КонецПроцедуры

Процедура ТестДолжен_ПроверитьКопированиеСтруктурыВПриемник() Экспорт
	
	ЗначениеСтруктура = Новый Структура("Ключ1, Ключ2", "Ключ1", "Ключ2");
	ЗначениеФиксированнойСтруктуры = Новый ФиксированнаяСтруктура(ЗначениеСтруктура);
	СтруктураПриемник = Новый Структура();
	РезультатКопирования = КопированиеТипа.Скопировать(ЗначениеСтруктура, СтруктураПриемник);

	Ожидаем.Что(РезультатКопирования, "Проверка копирования типа <Структура> должна быть успешной").Не_().Равно(ЗначениеСтруктура);
	Ожидаем.Что(РезультатКопирования.Количество(), "Проверка копирования типа <Структура> должна быть успешной").Равно(ЗначениеСтруктура.Количество());
	Ожидаем.Что(РезультатКопирования.Ключ1, "Проверка копирования типа <Структура> должна быть успешной").Равно(ЗначениеСтруктура.Ключ1);
	Ожидаем.Что(РезультатКопирования.Ключ2, "Проверка копирования типа <Структура> должна быть успешной").Равно(ЗначениеСтруктура.Ключ2);

	СтруктураПриемник = Новый ФиксированнаяСтруктура(СтруктураПриемник);
	
	КопированиеТипа.Скопировать(ЗначениеСтруктура, СтруктураПриемник);
	Ожидаем.Что(СтруктураПриемник, "Проверка копирования типа <Структура> должна быть успешной").Не_().Равно(ЗначениеСтруктура);
	Ожидаем.Что(СтруктураПриемник.Количество(), "Проверка копирования типа <Структура> должна быть успешной").Равно(ЗначениеСтруктура.Количество());
	Ожидаем.Что(СтруктураПриемник.Ключ1, "Проверка копирования типа <Структура> должна быть успешной").Равно(ЗначениеСтруктура.Ключ1);
	Ожидаем.Что(СтруктураПриемник.Ключ2, "Проверка копирования типа <Структура> должна быть успешной").Равно(ЗначениеСтруктура.Ключ2);
	Ожидаем.Что(ПроверкаТипа.ЭтоФиксированнаяСтруктура(СтруктураПриемник), "Проверка копирования типа <ФиксированныйМассив> должна быть успешной").ЕстьИстина();
	

КонецПроцедуры

Процедура ТестДолжен_ПроверитьКопированиеСтруктурыБезВложенныхТипов() Экспорт
	
	ЗначениеМассив = Новый Массив();
	ЗначениеМассив.Добавить("Элемент1");
	ЗначениеМассив.Добавить("Элемент2");
	
	// Копирование в приемник
	ЗначениеМассивПриемник = Новый Массив();
	РезультатКопирования = КопированиеТипа.Скопировать(ЗначениеМассив, ЗначениеМассивПриемник);
	Ожидаем.Что(РезультатКопирования, "Проверка копирования типа <Массив> должна быть успешной").Равно(ЗначениеМассивПриемник);
	Ожидаем.Что(РезультатКопирования, "Проверка копирования типа <Массив> должна быть успешной").Не_().Равно(ЗначениеМассив);
	Ожидаем.Что(РезультатКопирования.Количество(), "Проверка копирования типа <Массив> должна быть успешной").Равно(ЗначениеМассив.Количество());
	
КонецПроцедуры

Процедура ТестДолжен_ПроверитьКопированиеСтруктурыИВложенныхТипов() Экспорт
	
	// Копирование с создания копий вложенных ссылочных типов
	ЗначениеМассив = Новый Массив();
	ВложеннаяСтруктура = Новый Структура("Ключ1, Ключ2", "Ключ1", "Ключ2");
	ЗначениеМассив.Добавить(ВложеннаяСтруктура);
	РезультатКопирования = КопированиеТипа.Скопировать(ЗначениеМассив, , 1);
	Ожидаем.Что(РезультатКопирования, "Проверка копирования типа <Массив> должна быть успешной").Не_().Равно(ЗначениеМассив);
	Ожидаем.Что(РезультатКопирования.Количество(), "Проверка копирования типа <Массив> должна быть успешной").Равно(ЗначениеМассив.Количество());
	Ожидаем.Что(РезультатКопирования[0], "Проверка копирования типа <Массив> должна быть успешной").Не_().Равно(ВложеннаяСтруктура);
	Ожидаем.Что(РезультатКопирования[0].Ключ1, "Проверка копирования типа <Массив> должна быть успешной").Равно(ВложеннаяСтруктура.Ключ1);
	Ожидаем.Что(РезультатКопирования[0].Ключ2, "Проверка копирования типа <Массив> должна быть успешной").Равно(ВложеннаяСтруктура.Ключ2);
	
КонецПроцедуры



// Процедура ТестДолжен_ПроверитьТаблицаЗначений() Экспорт

// 	ЗначениеТаблицаЗначений = Новый ТаблицаЗначений();
	
// 	Ожидаем.Что(ПроверкаТипа.ЭтоТаблицаЗначений(ЗначениеТаблицаЗначений), "Проверка <ЭтоТаблицаЗначений> типа <ТаблицаЗначений> должна быть успешной").ЕстьИстина();
// 	Ожидаем.Что(ПроверкаТипа.ЭтоСсылочныйТип(ЗначениеТаблицаЗначений), "Проверка <ЭтоСсылочныйТип> типа <ТаблицаЗначений> должна быть успешной").ЕстьИстина();
		
// КонецПроцедуры

// Процедура ТестДолжен_ПроверитьДеревоЗначений() Экспорт

// 	ЗначениеПроверки = Новый ДеревоЗначений();
	
// 	Ожидаем.Что(ПроверкаТипа.ЭтоДеревоЗначений(ЗначениеПроверки), "Проверка <ЭтоДеревоЗначений> типа <ДеревоЗначений> должна быть успешной").ЕстьИстина();
// 	Ожидаем.Что(ПроверкаТипа.ЭтоСсылочныйТип(ЗначениеПроверки), "Проверка <ЭтоСсылочныйТип> типа <ДеревоЗначений> должна быть успешной").ЕстьИстина();
		
// КонецПроцедуры

// Процедура ТестДолжен_ПроверитьСписокЗначений() Экспорт

// 	ЗначениеПроверки = Новый СписокЗначений();
	
// 	Ожидаем.Что(ПроверкаТипа.ЭтоСписокЗначений(ЗначениеПроверки), "Проверка <ЭтоСписокЗначений> типа <СписокЗначений> должна быть успешной").ЕстьИстина();
// 	Ожидаем.Что(ПроверкаТипа.ЭтоСсылочныйТип(ЗначениеПроверки), "Проверка <ЭтоСсылочныйТип> типа <СписокЗначений> должна быть успешной").ЕстьИстина();
		
// КонецПроцедуры

// Процедура ТестДолжен_ПроверитьСтруктуры() Экспорт

// 	ЗначениеСтруктура = Новый Структура();
// 	ЗначениеФиксированныйСтруктура = Новый ФиксированнаяСтруктура(ЗначениеСтруктура);
	
// 	Ожидаем.Что(ПроверкаТипа.ЭтоСтруктура(ЗначениеСтруктура), "Проверка <ЭтоСтруктура> типа <Структура> должна быть успешной").ЕстьИстина();
// 	Ожидаем.Что(ПроверкаТипа.ЭтоФиксированнаяСтруктура(ЗначениеФиксированныйСтруктура), "Проверка <ЭтоФиксированнаяСтруктура> типа <ФиксированнаяСтруктура> должна быть успешной").ЕстьИстина();
// 	Ожидаем.Что(ПроверкаТипа.ЭтоЛюбаяСтруктура(ЗначениеСтруктура), "Проверка <ЭтоЛюбаяСтруктура> типа <Структура> должна быть успешной").ЕстьИстина();
// 	Ожидаем.Что(ПроверкаТипа.ЭтоЛюбаяСтруктура(ЗначениеФиксированныйСтруктура), "Проверка <ЭтоЛюбаяСтруктура> типа <ФиксированнаяСтруктура> должна быть успешной").ЕстьИстина();
// 	Ожидаем.Что(ПроверкаТипа.ЭтоСсылочныйТип(ЗначениеСтруктура), "Проверка <ЭтоСсылочныйТип> типа <Структура> должна быть успешной").ЕстьИстина();
// 	Ожидаем.Что(ПроверкаТипа.ЭтоСсылочныйТип(ЗначениеФиксированныйСтруктура), "Проверка <ЭтоСсылочныйТип> типа <ФиксированнаяСтруктура> должна быть успешной").ЕстьИстина();
		
// КонецПроцедуры

// Процедура ТестДолжен_ПроверитьСоответствия() Экспорт

// 	ЗначениеСоответствие = Новый Соответствие();
// 	ЗначениеФиксированноеСоответствие = Новый ФиксированноеСоответствие(ЗначениеСоответствие);
	
// 	Ожидаем.Что(ПроверкаТипа.ЭтоСоответствие(ЗначениеСоответствие), "Проверка <ЭтоСоответствиеЗначениеСоответствие> типа <Соответствие> должна быть успешной").ЕстьИстина();
// 	Ожидаем.Что(ПроверкаТипа.ЭтоФиксированноеСоответствие(ЗначениеФиксированноеСоответствие), "Проверка <ЭтоФиксированноеСоответствие> типа <ФиксированноеСоответствие> должна быть успешной").ЕстьИстина();
// 	Ожидаем.Что(ПроверкаТипа.ЭтоЛюбоеСоответствие(ЗначениеСоответствие), "Проверка <ЭтоЛюбоеСоответствие> типа <Соответствие> должна быть успешной").ЕстьИстина();
// 	Ожидаем.Что(ПроверкаТипа.ЭтоЛюбоеСоответствие(ЗначениеФиксированноеСоответствие), "Проверка <ЭтоЛюбоеСоответствие> типа <ФиксированноеСоответствие> должна быть успешной").ЕстьИстина();
// 	Ожидаем.Что(ПроверкаТипа.ЭтоСсылочныйТип(ЗначениеСоответствие), "Проверка <ЭтоСсылочныйТип> типа <Соответствие> должна быть успешной").ЕстьИстина();
// 	Ожидаем.Что(ПроверкаТипа.ЭтоСсылочныйТип(ЗначениеФиксированноеСоответствие), "Проверка <ЭтоСсылочныйТип> типа <ФиксированноеСоответствие> должна быть успешной").ЕстьИстина();
		
// КонецПроцедуры

#КонецОбласти

Лог = Логирование.ПолучитьЛог("oscript.lib.types.testing");



